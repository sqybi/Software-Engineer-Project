1 引论

1.1 写作目的

本文将回顾该项目的开发过程，检讨此次软件工程实践项目给我们带来的经验与教训

1.2 项目背景

项目名称 二手书交易系统(Second Hand Book Exchange System)
软件系统名称 二手书交易系统(Second Hand Book Exchange System)
任务制定人 =Strikers=小组
开发团队 =Strikers=小组
用户 上海交通大学学生
计算中心 没有计算中心

1.3 定义

请参考Glossary部分

1.4 Reference

《面向对象软件工程 使用UML、模式与Java》
《软件工程(第九版)》
《课程设计模板》

2 构件简述

2.1 构件

SHBES系统由B/S结构组成，客户端运行于具有Javascript支持的现代浏览器上，服务器端运行于Java EE/Tomcat/MySQL环境

2.2 主要功能与表现

系统的主要特性:

管理员:
a) 可以添加/删除用户
b) 可以添加书籍、课程信息并标注二者之间的关系
最终用户
c) 可以根据浏览、查找用户分享的书籍信息
d）可以出售自己所使用的书籍
e) 可以请求他人出售某一本自己所使用的书籍
f) 可以向其他用户发送、接受信息
g) 可以查看其他用户的信息
f) 可以向其他用户发送消息
g) 可以更新、分享电子资料

系统设计过程中考虑到了大部分功能需求和非功能性需求，具有良好的可扩展性。

2.3 基本工作流

系统以三层结构组织，工作流如下:

用户请求->客户端UI->请求->转发Controller->子系统Controller->业务逻辑->持久化映射层->数据库

3. 项目分析

3.1 工作效率分析

项目组很好的进行了分工与协作，这主要依赖于小组成员紧密的互相联系。通过IM工具和版本控制工具，系统所有的信息在小组成员之间进行了充分流通，这也提高了工作效率。

在项目开发过程中，也出现了一些拖延现象，具体分析见第四部分，问题分析。

3.2 产品质量分析

项目组完成了所有规定的任务阶段(可行性分析\需求获取\需求分析\系统设计\对象设计\测试\总结)。在每个阶段都生成了对应的主文档(可行性分析报告\系统需求文档\系统架构文档\测试计划\项目总结)。符合项目要求。

3.3 使用技术评估

所选择的所有开发和运行环境均为开源软件。

3.3.1 项目管理技术

项目组使用IM工具和邮件进行沟通。项目文档使用git源代码跟踪技术进行管理。这保证了项目组文档的一致性和有效性。在实践中，版本管理系统很好的实现了同步和交流的功能。

3.3.2 系统架构评估

3.3.2.1 系统整体架构

系统使用了轻量级Java EE模型。我们选择了最通用的Java EE平台:Apache/Java EE/Tomcat/MySQL,这样的选型主要有两大优势:

1. 系统技术成熟，版本稳定,基本无bug
2. 容易扩展，可以很容易进行不同节点的拆分

3.3.2.2 系统设计

系统选用了传统的三层结构。清晰，明了，子系统耦合较小，内聚性高。
系统的MVC框架选用Struts，持久化存储使用Hibernate,依赖注入使用Spring,这一组合可靠，稳定，很好的满足了要求。

3.3.3 项目设计技术评估

项目设计中大量使用了设计模式来降低耦合，包括观察者模式、桥接模式、代理模式等。

3.4 失误分析

I.项目同步不足

由于项目由多人协作构成，不同人对相同问题理解有差异。在开发伊始，每个人都维护着自己的词汇表，使得项目内部出现了较严重的不一致现象，使用全局词汇表，要求每个人使用的术语都更新至该词汇表可以缓解该问题。

II.拖延问题严重

拖延问题主要是由项目组成员协作不足所导致的，由于对彼此的分工不够清晰，遇到问题缺乏有效的交流机制，导致很多问题进度缓慢。解决该问题的方法主要是定期的项目组会议，在每个迭代周期明确每个人的任务。

III. Java EE性能较低

在实际使用中，发现作为企业级框架，JavaEE耗费资源较大。在项目初期，或许选择一个较快较灵活的系统会降低系统的部署成本

IV. 频繁变更需求

4. 经验总结

4.1 团队需要有效的协作手段

几乎所有的问题都出在项目组缺乏有效沟通上。我们使用IM工具来缓解这一问题，或许事实上更好的解决方法是定期的例会和有效的文档(代码)。

4.2 仔细设计，然后敏捷

在分析-设计-编码迭代过程中，使用敏捷方法可以避免项目组一上来陷入需求分析的海洋，选择最重要的一组用例进行分析和实现，有助于理解系统，更好的设计需求。同时，这也使得项目组更加可控

4.3 享受设计和编码

Enjoy it.