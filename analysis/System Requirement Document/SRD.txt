二手书交易系统
系统需求文档

关键字
二手书
网站
平台
交易
线下
订单

摘要
在各高校，每学期学生们会购买大量的教材，而期末考试之后，其中的绝大部分教材将会失去其存在意义，成为书架上的摆设。第二年，下一届学生又会购买很多相同的教材，这造成了大量的浪费。
因此，出现了很多二手书店，从高年级学生手中低价收购并卖给低年级学生。但是，二手书店有很多缺点，例如检索不方便，价格比较贵，书籍较旧，闲置率比较高。
建立一个二手书交易网站，能够方便检索，提高交易成功率，减少中间环节，增加交易双方的获利。

1 引言

1.1 编写目的
此文本是一份系统需求分析报告。该报告将从用户的角度进行需求分析，旨在确定这个项目的各种需求，包括系统硬件需求、功能要求以及一些非功能需求。让小组成员在设计制作过程中有一个明确的目标，并且时刻提醒组员以用户为出发点，为其设计最能让其满意的作品。

1.2 文档约定
二手书：在某一段时间内使用过，但是之后对拥有者来说失去使用价值的书。
SHBES：Second-hand Book Exchange System，二手书交易系统，即本网站。

2 综合描述

2.1 产品的状况
本项目将设计一个以二手书交易平台为目标的网站。
在各高校，每学期学生们会购买大量的教材，而期末考试之后，其中的绝大部分教材将会失去其存在意义，成为书架上的摆设。第二年，下一届学生又会购买很多相同的教材，这造成了大量的浪费。因此，出现了很多二手书店，从高年级学生手中低价收购并卖给低年级学生。
但是，二手书店有很多缺点，例如检索不方便，价格比较贵，书籍较旧，闲置率比较高。建立一个二手书交易网站，能够方便检索，提高交易成功率，减少中间环节，增加交易双方的获利。

2.2 产品的功能
SHBES的功能主要有二，一是卖家发布书籍信息，二是买家检索书籍信息并购买。
购买的流程为：卖家发布信息->买家检索信息->卖家确认订单。

2.3 用户类和特性
SHBES的主要用户群为在校学生。网站采取线下交易，只提供一个信息交换的平台，不会提供金钱流动相关的功能。


3 系统功能需求

3.1 功能性需求

Actor | UseCase | Memo
Spector | ViewBook | 用户可以浏览书籍
Spector | ViewBookByCategory | 用户可以按分类浏览书籍
Spector | ViewBookByRating   | 用户可以按评价浏览书籍
Spector | ViewBookBYCourse   | 用户可以按课程浏览书籍
Spector | UserLogIn          | 用户可以登录
Spector | FindBook           | 用户可以查找书籍
Spector | FindCourse         | 用户可以查找课程
EndUser | ViewUser           | 登录用户可以查看其它用户的信息
EndUser | UserModifyInfo     | 登录用户可以更改自己的注册信息
EndUser | UserLogOut         | 登录用户可以注销
EndUser | PublishBook        | 登录用户可以出售书籍
EndUser | TryPrice           | 登录用户可以进行竞价
EndUser | FinishOrder        | 登录用户可以完成订单
EndUser | CancelOrder        | 登录用户可以取消订单
EndUser | RequestBook        | 登录用户可以请求书籍
EndUser | RateUser           | 登录用户可以评价订单
EndUser,Admin | AddBookKindInfo  | 添加书籍品种信息
EndUser,Admin | AddCourseInfo    | 添加课程信息
Admin   | ManageUser         | 管理员可以进行用户管理


3.2 非功能性需求

3.2.1 可用性需求
I. 用户界面 用户界面应简单易懂

3.2.2 可靠性需求
I. 系统应能维护用户信息与交易信息的机密性
II.系统应在正常工作生活时间(0600-次日0200)可用。
III.系统崩溃时交易数据应保持一致性

3.2.3 性能需求
I. 负载 SHBES的设计目标是1000~5000用户同时在线时可以正常运作。

3.2.4 实现性需求
I. 计算环境
客户端节点：符合W3C的浏览器
服务器节点：Java EE/Apache/Tomcat/MySQL

节点应能承担正常的计算任务

II. 网络环境

节点之间应具有正常通讯带宽的网络连接

4 需求分析模型

4.1 用例模型
(插入用例模型)

4.2 对象模型
(插入对象模型)

4.3 动态模型
(插入动态模型)

5 术语表

参见全局术语表