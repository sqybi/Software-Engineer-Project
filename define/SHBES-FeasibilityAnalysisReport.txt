二手书交易系统
可行性分析报告

制作小组
XX

小组成员
XX
XX
XX
XX
XX

关键字
二手书 网站 交易 Web

摘要
在各高校，每学期学生们会购买大量的教材，而期末考试之后，其中的绝大部分教材将会失去其存在意义，成为书架上的摆设。第二年，下一届学生又会购买很多相同的教材，这造成了大量的浪费。因此，出现了很多二手书店，从高年级学生手中低价收购并卖给低年级学生。但是，二手书店有很多缺点，例如检索不方便，价格比较贵，书籍较旧，闲置率比较高。建立一个二手书交易网站，能够方便检索，提高交易成功率，减少中间环节，增加交易双方的获利。
本文将从本系统的目标、需求、系统构架、技术选型等方面详细分析二手书交易系统的可行性。


概论

写作目的与开发背景

书籍是人类进步的阶梯，但昂贵的价格，使得人们对很多书籍望而却步。此时，二手书交易能够起到很大的作用。
在各高校，教材重复利用是一个有意义的事情，而目前还很少有人着手做这方面。本文主要分析制作一个二手书交易网站的可行性。


定义

SHBES：Second-hand Book Exchange System，二手书交易系统，即本网站。


参考

淘宝网
中国最大的C2C交易平台。

当当网
中国一家以书籍类为主的B2C交易平台。


开发前提


目标人群

本系统目标人群是高校学生。前期将先以几个学校做试点，待到模式成熟，再予以推广。


系统范围

本系统主要为二手书交易牵线搭桥，前期暂不涉及支付和物流相关内容。


需求

二手书交易系统的初步定位是一个二手书专业交易网站。

功能性需求
二手书交易系统的主要目的是提供用户进行二手书交易的媒介。为此，网站需要能满足如下几个功能性需求。

1)卖方发布二手书
卖方：发布物品、查看订单、有订单通知、确认订单
买方：下订单、查看订单、有订单确认通知、确认收货
还需要提供相应的撤销功能。

2)买方发布二手书需求
买方：发布标的物、查看投标信息、有投标通知、确认交易、确认收货
卖方：投标、查看投标信息、交易确认通知、确认交易完成
还需要提供相应的撤销功能。

3)交易物品
交易物品信息应包含图书名称、作者、出版社、ISBN、图片、价格等信息。
此外，可以看到发布者的用户名和模糊地址。
交易确认后，可以看到双方的详细地址和联系方式。

4)检索
系统应能够通过图书信息进行检索、排序、对比。

5)用户交流
交易完成后买卖双方可以互作评价，影响双方信誉度。
恶意评价需要申诉途径。
对每个物品或标的物，买卖双方可做公开和私下发送信息。
用户之间可直接发送信息。

6)用户身份
用户的操作中，需要验证用户身份的，必须在登录后才能进行。
用户可以在本网站注册，也可使用一些通用身份验证系统接入。

7)系统管理
提供删除消息或物品、封停解封账号、修改主页推荐物品等的功能。

非功能性需求
除了功能性需求以外，网站还需要满足如下几个非功能性需求。

1)可用性
网站需要能满足1000~5000用户同时在线而不崩溃。
网站应7x24在线，维护时间需要尽量少。

2)可靠性
网站需要保证数据一致，不出现数据混乱等情况。

3)性能
网站的访问速度，在同等条件下，应与淘宝、当当等网站类似，不能有明显的延迟。

开发流程
详细请参见文档4.2


目标系统


系统构架

我们使用经典的B/S结构和三层构架。

[Component Diagram - SHBES.png]

界面层使用网页实现。
业务层分为五个子系统：验证、订单、消息、管理、第三方验证。
数据访问层封装数据库访问。


技术选型

目前网站开发前端一般是HTML+CSS+Javascript，其中Javascript部分可以使用jQuery等框架，后端有三种技术框架比较流行，J2EE+MySQL、ASP.Net+SQL Server、PHP+MySQL。
我们需要在后端这三种框架中选择一种进行开发。

1)J2EE+MySQL
相当成熟的开源构架。有着大量的资源和社区支持。
多平台支持，可以在Linux平台上运行，成本较低。
伸缩性较好，有利于商业化运作。
开发工具使用Eclipse，总体表现一般。配置难度一般。
Java语言特性略显落后，性能一般。

2)ASP.Net+SQL Server
相当成熟的封闭构架。有着非常大量的资源，在中国比较流行。
多平台支持差，只能在Windows平台上运行，SQL Server比较贵。
伸缩性较好，但成本很高。
开发工具为Visual Studio，比较强大。配置较容易。
C#作为新兴语言，语法特性比较好，性能较好。

3)PHP+MySQL
开源构架。文档不是十分充足。
多平台支持，可以在Linux平台上运行，成本较低。
伸缩性不佳，一般多用于小型网站。
开发工具各种各样，均不算太好。配置较复杂。
PHP是动态语言，性能差，容易隐藏错误，但更改代码无需重新编译。


结论


正如我们以上的分析，我们可以在现在立即开始我们的工程。一步一步向完成迈进。
