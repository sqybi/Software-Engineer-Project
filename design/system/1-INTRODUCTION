1 介绍
1.1 系统目标
    在各高校，每学期学生们都会购买大量的教材，而期末考试之后，绝大部分教材将会失去存在的意义，成为书架上的摆设。
    二手书交易系统(Second Handed Book Exchange System,SHBES)设计，用以提供方便，快捷的图书检索交易平台，鼓励学生交换资源，节约时间、精力与资金。 
1.2 设计目标
    设计一个二手书交易平台，系统可以做到:
        1) 提供相应的二手书共享与索取功能
         可以将对应的二手书信息登录到网上，标记期望售价。
	2) 提供完善的教材检索机制
         可根据教材的相关信息及相关科目信息快速检索到对应的教材。
        3) 提供对应的买卖机制
         可根据购买需求和共享信息商定交易，系统将以短信/email形式通知交易者。
    系统还应满足如下的设计目标:
        1)可靠性
         系统应具有较强的安全性和明确的访问控制系统，能承受1000左右的并发连接数，系统内部的信息应保持一致。
        2)性能
         平均网页响应时间应接近淘宝、饿了么等网站的水准。当性能下降时，应有效通知在等待的终端用户。
        3)可用性
         用户应在首页上了解到系统的主要功能，在登录后所有功能的访问不应带来超过两次的页面刷新。系统应具有完善的帮助文档。
        4)维护性
         系统设计应高度模块化，添加新的功能和子系统较为容易，代码文档性较好。
1.3 定义
    二手书(Second-handed Book)
       个人所拥有的在交易平台上进行交易的书本。
    套装(Suites)
       一套书籍。由多本书构成，可以指定整体交易或分别交易。
    教材(Course Textbook)
       课程老师指定的教材
    配套教材(Course Reference)
       与课程教材和教学内容紧密联系的教材
    参考书(Reference)
       与课程相关，有参考意义的书籍
    纸质资料(Paper Information)
       无正式出版许可的书籍与资料
    共享(Sharing)
       分享人将书籍放置于交易市场上的动作
    请求(Request)
       请求者请求某本书籍的分享。分为借阅请求与购买请求
    接口层(UI Layer)
       与用户直接交互的系统层，包括终端用户界面与管理界面。
    业务逻辑层(Domain Logic Layer)
       业务逻辑的建模。包括验证系统、交易系统、查询系统、展示系统、推荐系统与消息系统。
    持久化层(Persistence Layer)
       保存对象的关系数据库。
    终端用户界面子系统(End-user Interface Subsystem)
    管理用户界面子系统(Admin-user Interface Subsystem)
       分别用于给最终用户和管理员提供相应服务，调用对应的服务
    请求转发子系统(RequestController)
       服务器端的对外接口，接受客户端的请求，并转发给合适的对象。
    验证系统(AuthSubsystem)
       检查对应的用户类型是否有足够的权限。
    交易系统(ExchangeSubsystem)
       对二手书进行出售、购买、竞价。
    查询系统(QuerySubsystem)
	对书籍与课程的信息进行查询。
    推荐系统(RecommendationSystem)
        根据用户的购买习惯与课程表推荐相应的书籍。
1.4 参考文献
    参见需求分析与词汇表
1.5 概述
    网站系统采用经典的B/S结构与分层结构设计。分为接口层，逻辑层与持久化存储层。系统。接口层包括客户端的普通用户界面、系统管理界面与服务器端的请求分配系统。逻辑层包括验证系统、交易系统、查询系统、推荐系统、消息系统。持久化存储层负责数据的维护与处理。下文将详述各个子系统的设计与实现。
    所有系统均运行于Java 7/Apache/MySQL服务器上，使用Struts 2作为MVC框架，使用Hibernate进行数据持久化处理，使用Spring进行依赖注入。客户端脚本使用Javascript作为实现语言。
